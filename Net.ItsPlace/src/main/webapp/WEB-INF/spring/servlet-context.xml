<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:device="http://www.springframework.org/schema/mobile/device"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd		
		http://www.springframework.org/schema/mobile/device http://www.springframework.org/schema/mobile/device/spring-mobile-device-1.0.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	 
	<!-- Enables the Spring MVC @Controller programming model -->
		
	<!-- Configures the Spring MVC @Controller programming model--> 

	<annotation-driven>
	
		<argument-resolvers>
			<beans:bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
			<beans:bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
		</argument-resolvers>			
		<message-converters>	        	       
	    	<beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
		    <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
					 <beans:property name="writeAcceptCharset" value="false" />
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/plain;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
			</beans:bean>
			<beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<beans:bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<beans:bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
			<beans:bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
 			<beans:bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<beans:property name="supportedMediaTypes" value="application/json;charset=UTF-8" />				
			</beans:bean>
			<beans:bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
					<beans:property name="supportedMediaTypes" value="application/xml;charset=UTF-8" />
					<beans:property name="marshaller" ref="jaxb2Marshaller" />
					<beans:property name="unmarshaller" ref="jaxb2Marshaller" />
			</beans:bean>
    	</message-converters>
	</annotation-driven>
	
	<!-- Interceptors that execute common control logic across multiple requests -->
	<interceptors>
		<beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
		<beans:bean class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" /> 		
	</interceptors>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 
		Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	--> 
	  
	    
 	<context:component-scan base-package="*" />
	
</beans:beans>
